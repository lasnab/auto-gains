import streamlit as st
from datetime import date
import utils

st.set_page_config(page_title="ðŸ’ª Auto Gains")
with st.container(border=True):
    col1, col2 = st.columns([0.2, 0.8])
    with col1:
        st.markdown('')
        st.image('logo.png', width=150)
    with col2:
        st.title("ðŸ’ªðŸ”— Auto-Gains: Effortless Blog Gains with AI-Powered Content Generation")
    st.markdown("Auto-Gains is a powerful blog generation app crafted with Python and Streamlit. Simply input your blog topic, category, word count, and, for an extra boost, provide a YouTube video URL. Auto-Gains will transcribe and summarize the video, seamlessly integrating valuable insights into your blog post. Harnessing the magic of Open API, LangChain, and Tiktoken, it effortlessly generates a catchy title for your content. Elevate your blogging experience with Auto-Gains, where innovation meets convenience.")
    st.markdown("*Logo imagined by Hrithik. Created by Leonardo.AI*")

openai_api_key = st.text_input("OpenAI API Key", type="password")

def display_blog(topic, header, category, matter, reference_video):
    with st.container():
        st.markdown("# {}".format(header.title()))
        st.markdown("#### Category: {}".format(category.title()))
        st.markdown(
            "###### Generated by [Auto Gains](https://github.com/lasnab/auto-gains) ðŸ’ª on {}".format(
                date.today().strftime("%B %d, %Y")
            )
        )
        st.markdown(matter)
        st.markdown("---")
        st.markdown("Topic: {}".format(topic.title()))
        st.markdown("[Reference Video]({})".format(reference_video))


def create_blog_e2e(topic, category, word_length, maybe_reference_video):
    header, matter = utils.write_blog(topic, category, word_length, openai_api_key, maybe_reference_video)
    return display_blog(topic, header, category, matter, maybe_reference_video)

def create_blog_demo():
    topic = "how to use ai to become a fitness influencer"
    header = "Transform Your Fitness Journey with AI: A Personal Experiment"
    category = "gym"
    file_path = "demo.txt"
    try:
        with open(file_path, "r") as file:
            matter = file.read()
    except:
        st.error("Error Generating Response :( Contact me at github.com/lasnab", icon="ðŸš¨")

    reference_video = "https://youtu.be/tkOvLvOx808?si=sAH3UPPxtR9nt6bp"
    return display_blog(topic, header, category, matter, reference_video)


with st.form("myform"):
    blog_topic = st.text_input("Enter Blog Topic:", placeholder="How To Use AI To Become A Fitness Influencer")
    blog_category = st.text_input("Enter Blog Category:", placeholder="Gym")
    blog_word_length = st.number_input("Enter Word Length: (max. 500 words)", 100, 500, placeholder=250)
    blog_reference_video = st.text_input(
        "Provide Link to Reference YouTube Video: (optional) ", "", placeholder="https://youtu.be/tkOvLvOx808?si=sAH3UPPxtR9nt6bp"
    )
    st.markdown("For best results, use a video no longer than 5 minutes for GPT tokenization rate limits")

    submitted = st.form_submit_button("Generate Blog")
    is_demo_mode = st.form_submit_button("Demo")

    if is_demo_mode:
        create_blog_demo()

    if not openai_api_key.startswith("sk-"):
        st.warning("Please enter your OpenAI API key!", icon="âš ")

    if submitted and not blog_topic:
        st.warning("Please enter a blog topic or click Demo!", icon="âš ")

    if submitted and not blog_category:
        st.warning("Please enter a blog category or click Demo!", icon="âš ")

    if submitted and openai_api_key.startswith("sk-"):
        create_blog_e2e(
            blog_topic, blog_category, blog_word_length, blog_reference_video
        )
